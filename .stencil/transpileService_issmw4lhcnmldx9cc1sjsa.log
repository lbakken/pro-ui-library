{"moduleFile":{"sourceFilePath":"/Users/admin/repos/pro-ui-library/src/components/pro-radio-group/pro-radio-group.tsx","jsFilePath":"/Users/admin/repos/pro-ui-library/src/components/pro-radio-group/pro-radio-group.js","cmps":[{"isLegacy":false,"tagName":"pro-radio-group","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"ProRadioGroup","elementRef":"el","encapsulation":"none","properties":[{"name":"name","type":"string","attribute":"name","reflect":false,"mutable":false,"required":true,"optional":false,"complexType":{"original":"string","resolved":"string","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"value","type":"string","attribute":"value","reflect":false,"mutable":false,"required":false,"optional":false,"complexType":{"original":"string","resolved":"string","references":{}},"docs":{"tags":[],"text":""},"internal":false}],"virtualProperties":[],"states":[],"methods":[],"listeners":[{"name":"proRadioDidLoad","method":"onRadioDidLoad","capture":false,"passive":false},{"name":"proRadioDidUnload","method":"onRadioDidUnload","capture":false,"passive":false},{"name":"proSelect","method":"onSelect","capture":false,"passive":false},{"name":"proDeselect","method":"onDeselect","capture":false,"passive":false}],"events":[],"watchers":[],"styles":[{"modeName":"$","styleStr":null,"styleId":"PRO-RADIO-GROUP","compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/admin/repos/pro-ui-library/src/components/pro-radio-group/pro-radio-group.scss","relativePath":"pro-radio-group.scss","originalComponentPath":"pro-radio-group.scss"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/admin/repos/pro-ui-library/src/components/pro-radio-group/pro-radio-group.js","sourceFilePath":"/Users/admin/repos/pro-ui-library/src/components/pro-radio-group/pro-radio-group.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":true,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":true,"hasListener":true,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":true,"hasProp":true,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":true,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":false,"hasStyle":true,"hasVdomAttribute":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":false,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":[],"htmlTagNames":["slot"],"isUpdateable":true,"potentialCmpRefs":[]}],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":true,"hasVdomClass":true,"hasVdomFunctional":true,"hasVdomKey":true,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":false,"hasVdomStyle":true,"hasVdomText":true,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"potentialCmpRefs":[]},"jsText":"import { h } from '@stencil/core';\r\nexport class ProRadioGroup {\r\n    constructor() {\r\n        this.selects = [];\r\n    }\r\n    onRadioDidLoad(ev) {\r\n        const select = ev.target;\r\n        select.name = this.name;\r\n        this.selects.push(select);\r\n        this.updateRadios();\r\n    }\r\n    onRadioDidUnload(ev) {\r\n        const index = this.selects.indexOf(ev.target);\r\n        if (index > -1) {\r\n            this.selects.splice(index, 1);\r\n        }\r\n    }\r\n    onSelect(ev) {\r\n        const selectedRadio = ev.target;\r\n        if (selectedRadio) {\r\n            selectedRadio.checked = true;\r\n            this.value = selectedRadio.value;\r\n        }\r\n        this.updateRadios();\r\n    }\r\n    onDeselect(ev) {\r\n        const selectedRadio = ev.target;\r\n        if (selectedRadio) {\r\n            selectedRadio.checked = false;\r\n            this.value = undefined;\r\n        }\r\n        this.updateRadios();\r\n    }\r\n    componentDidLoad() {\r\n        this.updateRadios();\r\n    }\r\n    updateRadios() {\r\n        const value = this.value;\r\n        let hasChecked = false;\r\n        for (const select of this.selects) {\r\n            if (!hasChecked && select.value === value) {\r\n                hasChecked = true;\r\n                select.checked = true;\r\n            }\r\n            else {\r\n                select.checked = false;\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return h(\"slot\", null);\r\n    }\r\n    static get is() { return \"pro-radio-group\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"pro-radio-group.scss\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"pro-radio-group.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"name\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": true,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"name\",\r\n            \"reflect\": false\r\n        },\r\n        \"value\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"value\",\r\n            \"reflect\": false\r\n        }\r\n    }; }\r\n    static get elementRef() { return \"el\"; }\r\n    static get listeners() { return [{\r\n            \"name\": \"proRadioDidLoad\",\r\n            \"method\": \"onRadioDidLoad\",\r\n            \"target\": undefined,\r\n            \"capture\": false,\r\n            \"passive\": false\r\n        }, {\r\n            \"name\": \"proRadioDidUnload\",\r\n            \"method\": \"onRadioDidUnload\",\r\n            \"target\": undefined,\r\n            \"capture\": false,\r\n            \"passive\": false\r\n        }, {\r\n            \"name\": \"proSelect\",\r\n            \"method\": \"onSelect\",\r\n            \"target\": undefined,\r\n            \"capture\": false,\r\n            \"passive\": false\r\n        }, {\r\n            \"name\": \"proDeselect\",\r\n            \"method\": \"onDeselect\",\r\n            \"target\": undefined,\r\n            \"capture\": false,\r\n            \"passive\": false\r\n        }]; }\r\n}\r\n"}