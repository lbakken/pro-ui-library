import { createEvent as __stencil_createEvent } from "@stencil/core";
import { getConnect as __stencil_getConnect } from "@stencil/core";
import { getContext as __stencil_getContext } from "@stencil/core";
import { getElement as __stencil_getElement } from "@stencil/core";
import { Host as __stencil_Host } from "@stencil/core";
import { h as __stencil_h } from "@stencil/core";
import { registerInstance as __stencil_registerInstance } from "@stencil/core";
import { h } from '@stencil/core';
export class ProCheckbox {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
        this.disabled = false;
        this.checked = false;
        this.onClick = () => {
            this.checked = !this.checked;
        };
        this.proChange = __stencil_createEvent(this, "proChange", 7);
        this.proStyle = __stencil_createEvent(this, "proStyle", 7);
    }
    componentWillLoad() {
        this.emitStyle();
    }
    checkedChanged(isChecked) {
        this.proChange.emit({
            checked: isChecked,
            value: this.value
        });
        this.emitStyle();
    }
    disabledChanged() {
        this.emitStyle();
    }
    emitStyle() {
        this.proStyle.emit({
            'checkbox-checked': this.checked,
            'interactive-disabled': this.disabled,
            'checkbox-value': this.value
        });
    }
    render() {
        return h("input", { type: "checkbox", onClick: this.onClick });
    }
    get el() { return __stencil_getElement(this); }
    static get watchers() { return {
        "checked": ["checkedChanged"],
        "disabled": ["disabledChanged"]
    }; }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:pro-checkbox"; }
}
