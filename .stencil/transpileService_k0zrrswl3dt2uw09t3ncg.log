{"moduleFile":{"sourceFilePath":"/Users/admin/repos/pro-ui-library/src/components/pro-input/pro-input.tsx","jsFilePath":"/Users/admin/repos/pro-ui-library/src/components/pro-input/pro-input.js","cmps":[{"isLegacy":false,"tagName":"pro-input","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"ProInput","elementRef":null,"encapsulation":"shadow","properties":[{"name":"placeholder","type":"string","attribute":"placeholder","reflect":false,"mutable":false,"required":false,"optional":false,"complexType":{"original":"string","resolved":"string","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"regex","type":"unknown","reflect":false,"mutable":false,"required":false,"optional":false,"defaultValue":"/^(.+)$/","complexType":{"original":"RegExp","resolved":"RegExp","references":{"RegExp":{"location":"global"}}},"docs":{"tags":[],"text":""},"internal":false},{"name":"label","type":"string","attribute":"label","reflect":false,"mutable":true,"required":false,"optional":false,"complexType":{"original":"string","resolved":"string","references":{}},"docs":{"tags":[],"text":""},"internal":false},{"name":"required","type":"boolean","attribute":"required","reflect":false,"mutable":false,"required":false,"optional":false,"defaultValue":"false","complexType":{"original":"boolean","resolved":"boolean","references":{}},"docs":{"tags":[],"text":""},"internal":false}],"virtualProperties":[],"states":[{"name":"class"},{"name":"reqLabel"}],"methods":[],"listeners":[],"events":[{"name":"inputChange","method":"inputChange","bubbles":true,"cancelable":true,"composed":true,"docs":{"tags":[],"text":""},"complexType":{"original":"any","resolved":"any","references":{}},"internal":false}],"watchers":[],"styles":[{"modeName":"$","styleStr":null,"styleId":"PRO-INPUT","compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/admin/repos/pro-ui-library/src/components/pro-input/pro-input.scss","relativePath":"pro-input.scss","originalComponentPath":"pro-input.scss"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/admin/repos/pro-ui-library/src/components/pro-input/pro-input.js","sourceFilePath":"/Users/admin/repos/pro-ui-library/src/components/pro-input/pro-input.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":true,"hasComponentDidLoadFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":true,"hasLifecycle":true,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":true,"hasProp":true,"hasPropNumber":false,"hasPropBoolean":true,"hasPropString":true,"hasPropMutable":true,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomClass":true,"hasVdomFunctional":true,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":false,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":false,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["htmlFor","class","name","placeholder","id"],"htmlTagNames":["label","input"],"isUpdateable":true,"potentialCmpRefs":[]}],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":true,"hasVdomClass":true,"hasVdomFunctional":true,"hasVdomKey":true,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":false,"hasVdomStyle":true,"hasVdomText":true,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"potentialCmpRefs":[]},"jsText":"import { h, Host } from '@stencil/core';\r\nexport class ProInput {\r\n    constructor() {\r\n        this.regex = /^(.+)$/;\r\n        this.required = false;\r\n    }\r\n    componentWillLoad() {\r\n        if (this.required) {\r\n            this.reqLabel = 'required';\r\n        }\r\n    }\r\n    onInputChange(ev) {\r\n        const value = ev.target.value;\r\n        let validated = false;\r\n        if (value != '') {\r\n            (this.required) ? validated = this.regex.test(value) : validated = true;\r\n            validated ? this.class = 'valid' : this.class = 'invalid';\r\n        }\r\n        else {\r\n            validated = !this.required;\r\n            validated ? this.class = '' : this.class = 'invalid';\r\n        }\r\n        this.inputChange.emit({\r\n            name: this.label,\r\n            value: value,\r\n            valid: validated\r\n        });\r\n    }\r\n    render() {\r\n        return (h(Host, null,\r\n            h(\"label\", { htmlFor: this.label, class: this.reqLabel }, this.label),\r\n            h(\"input\", { onChange: (ev) => this.onInputChange(ev), name: this.label, placeholder: this.placeholder, id: this.label, class: this.class })));\r\n    }\r\n    static get is() { return \"pro-input\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"pro-input.scss\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"pro-input.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"placeholder\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"placeholder\",\r\n            \"reflect\": false\r\n        },\r\n        \"regex\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"RegExp\",\r\n                \"resolved\": \"RegExp\",\r\n                \"references\": {\r\n                    \"RegExp\": {\r\n                        \"location\": \"global\"\r\n                    }\r\n                }\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"defaultValue\": \"/^(.+)$/\"\r\n        },\r\n        \"label\": {\r\n            \"type\": \"string\",\r\n            \"mutable\": true,\r\n            \"complexType\": {\r\n                \"original\": \"string\",\r\n                \"resolved\": \"string\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"label\",\r\n            \"reflect\": false\r\n        },\r\n        \"required\": {\r\n            \"type\": \"boolean\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"boolean\",\r\n                \"resolved\": \"boolean\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"attribute\": \"required\",\r\n            \"reflect\": false,\r\n            \"defaultValue\": \"false\"\r\n        }\r\n    }; }\r\n    static get states() { return {\r\n        \"class\": {},\r\n        \"reqLabel\": {}\r\n    }; }\r\n    static get events() { return [{\r\n            \"method\": \"inputChange\",\r\n            \"name\": \"inputChange\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"complexType\": {\r\n                \"original\": \"any\",\r\n                \"resolved\": \"any\",\r\n                \"references\": {}\r\n            }\r\n        }]; }\r\n}\r\n"}