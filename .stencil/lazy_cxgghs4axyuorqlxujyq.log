import { createEvent as __stencil_createEvent } from "@stencil/core";
import { getConnect as __stencil_getConnect } from "@stencil/core";
import { getContext as __stencil_getContext } from "@stencil/core";
import { getElement as __stencil_getElement } from "@stencil/core";
import { Host as __stencil_Host } from "@stencil/core";
import { h as __stencil_h } from "@stencil/core";
import { registerInstance as __stencil_registerInstance } from "@stencil/core";
import { h } from '@stencil/core';
export class ProRadio {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
        this.name = 'default-radio-name';
        this.disabled = false;
        this.checked = false;
        this.onClick = () => {
            if (this.checked) {
                this.proDeselect.emit();
            }
            else {
                this.checked = true;
            }
        };
        this.proRadioDidLoad = __stencil_createEvent(this, "proRadioDidLoad", 7);
        this.proRadioDidUnload = __stencil_createEvent(this, "proRadioDidUnload", 7);
        this.proSelect = __stencil_createEvent(this, "proSelect", 7);
        this.proDeselect = __stencil_createEvent(this, "proDeselect", 7);
        this.proStyle = __stencil_createEvent(this, "proStyle", 7);
    }
    nameChanged() {
        this.emitStyle();
    }
    checkedChanged(isChecked) {
        if (isChecked) {
            this.proSelect.emit({
                checked: true,
                value: this.value
            });
        }
        this.emitStyle();
    }
    disabledChanged() {
        this.emitStyle();
    }
    componentWillLoad() {
        this.emitStyle();
    }
    componentDidLoad() {
        this.proRadioDidLoad.emit();
    }
    componentDidUnload() {
        this.proRadioDidUnload.emit();
    }
    emitStyle() {
        this.proStyle.emit({
            'radio-checked': this.checked,
            'interactive-disabled': this.disabled,
            'radio-value': this.value
        });
    }
    /* <Host
                    onClick={this.onClick}
                    role="radio"
                    class={{
                        'radio-checked': this.checked,
                        'radio-disabled': this.disabled
                    }}
                >
                    <div class="radio-icon">
                        <div class="radio-inner" />
                    </div>
                    <button
                        type="button"
                        disabled={this.disabled}
                    >
                    </button>
                </Host> */
    render() {
        return (h("input", { type: "radio", onClick: this.onClick, name: this.name, value: this.value, checked: this.checked }));
    }
    get el() { return __stencil_getElement(this); }
    static get watchers() { return {
        "name": ["nameChanged"],
        "checked": ["checkedChanged"],
        "disabled": ["disabledChanged"]
    }; }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:pro-radio"; }
}
