import { createEvent as __stencil_createEvent } from "@stencil/core";
import { getConnect as __stencil_getConnect } from "@stencil/core";
import { getContext as __stencil_getContext } from "@stencil/core";
import { getElement as __stencil_getElement } from "@stencil/core";
import { Host as __stencil_Host } from "@stencil/core";
import { h as __stencil_h } from "@stencil/core";
import { registerInstance as __stencil_registerInstance } from "@stencil/core";
import { h, Host } from '@stencil/core';
export class ProModal {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
        this.presented = false;
    }
    async present() {
        if (!this.presented)
            this.presented = true;
    }
    async dismiss() {
        if (this.presented)
            this.presented = false;
    }
    render() {
        return (this.presented) ? (h(Host, null, h("pro-backdrop", { onClick: () => this.dismiss() }), h("div", { class: "modal-window" }, h("div", { class: "modal-content" }, h("slot", null))))) : (h(Host, null));
    }
    get el() { return __stencil_getElement(this); }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:pro-modal"; }
}
