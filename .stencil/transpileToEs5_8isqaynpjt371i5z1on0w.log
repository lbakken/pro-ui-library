System.register(['./chunk-1b41fb25.system.js'], function (exports) {
    'use strict';
    var registerInstance, getContext, h, Host;
    return {
        setters: [function (module) {
                registerInstance = module.r;
                getContext = module.e;
                h = module.h;
                Host = module.H;
            }],
        execute: function () {
            var ProCard = /** @class */ (function () {
                function ProCard(hostRef) {
                    registerInstance(this, hostRef);
                    this.button = false;
                    this.type = 'button';
                    this.disabled = false;
                    this.win = getContext(this, "window");
                }
                ProCard.prototype.isClickable = function () {
                    return (this.href !== undefined || this.button);
                };
                ProCard.prototype.hostData = function () {
                    return {
                        class: {
                            'card-disabled': this.disabled,
                            'ion-activatable': this.isClickable()
                        }
                    };
                };
                ProCard.prototype.__stencil_render = function () {
                    var clickable = this.isClickable();
                    if (!clickable) {
                        return [
                            h("slot", null)
                        ];
                    }
                    var href = this.href;
                    var TagType = clickable ? (href === undefined ? 'button' : 'a') : 'div';
                    var attrs = (TagType === 'button')
                        ? { type: this.type }
                        : {
                            href: this.href,
                            rel: this.rel,
                            target: this.target
                        };
                    return (h(TagType, Object.assign({}, attrs, { class: "card-native", disabled: this.disabled }), h("slot", null), clickable && h("pro-ripple-effect", null)));
                };
                ProCard.prototype.render = function () { return h(Host, this.hostData(), this.__stencil_render()); };
                Object.defineProperty(ProCard, "style", {
                    get: function () { return "STYLE_TEXT_PLACEHOLDER:pro-card"; },
                    enumerable: true,
                    configurable: true
                });
                return ProCard;
            }());
            exports('pro_card', ProCard);
        }
    };
});
